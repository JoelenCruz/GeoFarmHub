FROM python:3.11.3-alpine3.18

# Evita gerar arquivos .pyc e melhora os logs
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Instala dependências do sistema necessárias para o Django + PostGIS
RUN apk update && apk add --no-cache \
    postgresql-client \
    postgresql-dev \
    postgis \
    gdal \
    gdal-dev \
    geos \
    geos-dev \
    proj \
    proj-dev \
    sqlite-dev \
    python3-dev \
    gcc \
    musl-dev \
    libffi-dev \
    jpeg-dev \
    zlib-dev \
    freetype-dev

# Define o diretório de trabalho
WORKDIR /djangoapp

# Copia apenas o requirements.txt primeiro para aproveitar cache do Docker
COPY djangoapp/requirements.txt /djangoapp/requirements.txt

# Cria um ambiente virtual e instala dependências do Python
RUN python -m venv /venv && \
    /venv/bin/pip install --upgrade pip && \
    /venv/bin/pip install -r /djangoapp/requirements.txt

# Copia o restante do código da aplicação
COPY djangoapp /djangoapp
COPY scripts /scripts

# Dá permissão de execução ao script de inicialização
RUN chmod +x /scripts/commands.sh

# Define permissões para usuário não-root
RUN adduser --disabled-password --no-create-home duser && \
    mkdir -p /data/web/static /data/web/media && \
    chown -R duser:duser /venv /data/web/static /data/web/media && \
    chmod -R 755 /data/web/static /data/web/media

# Define caminhos das bibliotecas GIS
ENV GEOS_LIBRARY_PATH=/usr/lib/libgeos_c.so
ENV GDAL_LIBRARY_PATH=/usr/lib/libgdal.so

# Adiciona os scripts e venv/bin ao PATH
ENV PATH="/scripts:/venv/bin:$PATH"

# Altera o usuário para não rodar como root
USER duser

# Comando de inicialização
CMD ["sh", "/scripts/commands.sh"]
